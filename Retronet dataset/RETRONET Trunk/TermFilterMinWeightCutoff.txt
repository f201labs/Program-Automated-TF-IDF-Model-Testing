/*
   Copyright © 2006-10, Jody Larsen.  jody.larsen@uky.edu, jody.larsen@gmail.com, jody@dreamfrog.com
   All rights reserved.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU Lesser General Public License as published
   by the Free Software Foundation; either version 2.1 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful, but
   WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
   or FITNESS FOR A PARTICULAR PURPOSE.
   See the GNU Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public License
   along with this library; if not, write to the
   Free Software Foundation, Inc.,
   51 Franklin Street, Fifth Floor Boston, MA  02110-1301 USA
*/

using System;
using System.Collections.Generic;
using System.Text;
using org.traceabilitycenter.RetroToolkit.Data;
using org.traceabilitycenter.RetroToolkit.Basic.Data;

namespace org.traceabilitycenter.RetroToolkit.VectorSpace
{
    public class TermFilterMinWeightCutoff : IDocumentTermFilter
    {
        #region ITermFilter Members

        double _minWeightCutoff = 0.0;

        public TermFilterMinWeightCutoff() { }
        public TermFilterMinWeightCutoff(double minWeightcutoff)
        {
            _minWeightCutoff = minWeightcutoff;
        }

        public void applyDocumentTermFilter(IDocumentCollection docs, ITermCollection vocabulary)
        {
            foreach (Document doc in docs)
            {
                for (int i = doc.Keywords.Count-1; i >= 0; i--)
                {
                    IDocumentTerm dt = doc.Keywords[i];
                    if (dt.Weight < _minWeightCutoff)
                    {
                        dt.Term.Frequency -= dt.Term.Frequency;
                        dt.Term.DocNumber--;
                        doc.Keywords.RemoveAt(i);
                    }
                }
            }
        }

        #endregion

        #region IPlugin Members

        public int getPluginID()
        {
            return 1;
        }

        public string getPluginName()
        {
            return "Term Filter (MinWeightCutoff = "+_minWeightCutoff+")";
        }

        #endregion
    }
}
