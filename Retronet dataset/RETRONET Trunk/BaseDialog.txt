/*
    Copyright © 2006, miklovan
    http://www.codeproject.com/cs/miscctrl/CustomDialogs.asp

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
  THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
  OF THE POSSIBILITY OF SUCH DAMAGE.
*/

using System;
using System.Drawing;
using System.Windows.Forms;

namespace CustomDialog
{
    /// <summary>
    /// Code by miklovan from http://www.codeproject.com/cs/miscctrl/CustomDialogs.asp
    /// </summary>
	public class BaseDialog : System.Windows.Forms.Form {

		#region Windows Form Designer generated code

		protected System.Windows.Forms.Button cbCancel;
		protected System.Windows.Forms.Button cbOk;
		protected Line Line1;
		private System.ComponentModel.Container components = null;

        /// <summary>
        /// Required method for Designer support - do not modify
        /// the contents of this method with the code editor.
        /// </summary>
        private void InitializeComponent()
        {
			this.cbCancel = new System.Windows.Forms.Button();
			this.cbOk = new System.Windows.Forms.Button();
			this.Line1 = new CustomDialog.Line();
			this.SuspendLayout();
			// 
			// cbCancel
			// 
			this.cbCancel.DialogResult = System.Windows.Forms.DialogResult.Cancel;
			this.cbCancel.Location = new System.Drawing.Point(112, 220);
			this.cbCancel.Name = "cbCancel";
			this.cbCancel.Size = new System.Drawing.Size(92, 24);
			this.cbCancel.TabIndex = 11;
			this.cbCancel.Text = "Cancel";
			this.cbCancel.Click += new System.EventHandler(this.cbCancel_Click);
			// 
			// cbOk
			// 
			this.cbOk.Location = new System.Drawing.Point(12, 220);
			this.cbOk.Name = "cbOk";
			this.cbOk.Size = new System.Drawing.Size(92, 24);
			this.cbOk.TabIndex = 10;
			this.cbOk.Text = "Ok";
			this.cbOk.Click += new System.EventHandler(this.cbOk_Click);
			// 
			// Line1
			// 
			this.Line1.Location = new System.Drawing.Point(44, 208);
			this.Line1.Name = "Line1";
			this.Line1.Size = new System.Drawing.Size(304, 6);
			this.Line1.TabIndex = 12;
			// 
			// BaseDialog
			// 
			this.AcceptButton = this.cbOk;
			this.AutoScaleBaseSize = new System.Drawing.Size(5, 13);
			this.CancelButton = this.cbCancel;
			this.ClientSize = new System.Drawing.Size(390, 251);
			this.Controls.Add(this.Line1);
			this.Controls.Add(this.cbCancel);
			this.Controls.Add(this.cbOk);
			this.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog;
			this.KeyPreview = true;
			this.MaximizeBox = false;
			this.MinimizeBox = false;
			this.Name = "BaseDialog";
			this.ShowInTaskbar = false;
			this.StartPosition = System.Windows.Forms.FormStartPosition.CenterParent;
			this.ResumeLayout(false);

		}

		protected override void Dispose( bool disposing ) {
			if( disposing ) {
				if(components != null) {
					components.Dispose();
				}
			}
			base.Dispose( disposing );
		}

		#endregion

		public BaseDialog() {
			InitializeComponent();
		}

		private void cbOk_Click(object sender, System.EventArgs e) {
			ExitOk();
		}

		private void cbCancel_Click(object sender, System.EventArgs e) {
			ExitCancel();
		}

		protected void ExitOk() {
			if(cbOk.Enabled==true) {
				if(OnOk()) {
					this.DialogResult = DialogResult.OK;
					this.Close();
				}
			}
		}

		protected void ExitCancel() {
			if(cbCancel.Enabled==true) {
				if(OnCancel()) {
					this.DialogResult = DialogResult.Cancel;
					this.Close();
				}
			}
		}

		protected virtual bool OnOk() {
			return true;
		}

		protected virtual bool OnCancel() {
			return true;
		}

		protected override void OnLoad(EventArgs e) {
			base.OnLoad (e);
			OnResize(e);
		}

		protected override void OnResize(EventArgs e) {
			base.OnResize (e);
			Line1.Location = new Point(6, this.Size.Height - 89);
			Line1.Size = new Size(this.Size.Width - 18, 2);
			int okx = this.Size.Width - cbOk.Size.Width - 24;
			if(cbCancel.Visible)
				okx -= cbCancel.Size.Width + 4;
			cbOk.Location = new Point(okx, this.Size.Height - cbOk.Size.Height - 52);
			cbCancel.Location = new Point(this.Size.Width - cbCancel.Size.Width - 24, this.Size.Height - cbCancel.Size.Height - 52);
		}
	}

    public class Line : Control
    {

        #region Component Designer generated code

        private System.ComponentModel.Container components = null;

        private void InitializeComponent()
        {
            // 
            // Line
            // 
            this.Name = "Line";
            this.Size = new System.Drawing.Size(264, 150);

        }

        protected override void Dispose(bool disposing)
        {
            if (disposing)
            {
                if (components != null)
                {
                    components.Dispose();
                }
            }
            base.Dispose(disposing);
        }

        #endregion

        public Line()
        {
            InitializeComponent();
        }

        protected override void OnPaint(PaintEventArgs e)
        {
            base.OnPaint(e);
            Redraw(e.Graphics);
        }

        private void Redraw(Graphics g)
        {
            // drawing dark edge of line
            Pen pen = new Pen(SystemColors.ControlDark, 1);
            Point p1 = new Point(1, 2);
            Point p2 = new Point(this.Width - 2, 2);
            g.DrawLine(pen, p1, p2);
            // drawing bright edge of line
            pen = new Pen(SystemColors.ControlLightLight, 1);
            p1 = new Point(1, 3);
            p2 = new Point(this.Width - 2, 3);
            g.DrawLine(pen, p1, p2);
            p1 = new Point(this.Width - 2, 2);
            g.DrawLine(pen, p1, p2);
        }

        protected override void OnResize(EventArgs e)
        {
            base.OnResize(e);
            // height shouldn't change, only length changes
            this.Height = 6;
            Redraw(this.CreateGraphics());
        }
    }
}