/*
   Copyright © 2006-10, Jody Larsen.  jody.larsen@uky.edu, jody.larsen@gmail.com, jody@dreamfrog.com
   All rights reserved.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU Lesser General Public License as published
   by the Free Software Foundation; either version 2.1 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful, but
   WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
   or FITNESS FOR A PARTICULAR PURPOSE.
   See the GNU Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public License
   along with this library; if not, write to the
   Free Software Foundation, Inc.,
   51 Franklin Street, Fifth Floor Boston, MA  02110-1301 USA
*/

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Windows.Forms;
using System.IO;

namespace org.traceabilitycenter.Retro.UI
{
    /// <summary>
    /// This class displays the specified text to the user, and permits the
    /// user to optionally save the displayed text to a text file
    /// </summary>
    public partial class ShowTextDialog : CustomDialog.BaseDialog
    {
    
        /// <summary>
        /// Constructor, initializes the save text dialog
        /// </summary>
        public ShowTextDialog()
        {
            InitializeComponent();
            this.cbOk.Text = "Save";
        }

        protected override bool OnOk()
        {
            SaveFileDialog saveDialog = new SaveFileDialog();
            saveDialog.Filter = "Text Files|*.txt";
            saveDialog.ShowDialog();

            if(saveDialog.FileName == null || saveDialog.FileName.Length <= 0) {
                return false;
            }
            
            using (StreamWriter sw = File.CreateText(saveDialog.FileName)) {
                sw.Write(this.tbOutput.Text);
            }
            return base.OnOk();
        }

        /// <summary>
        /// Displays the dialog with the specified text
        /// </summary>
        /// <param name="text"></param>
        public void Show(String text)
        {
            this.tbOutput.Text = text;
            this.ShowDialog();
        }
    }
}