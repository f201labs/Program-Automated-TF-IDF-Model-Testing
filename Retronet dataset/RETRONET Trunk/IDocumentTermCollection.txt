/*
   Copyright © 2006-10, Jody Larsen.  jody.larsen@uky.edu, jody.larsen@gmail.com, jody@dreamfrog.com
   All rights reserved.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU Lesser General Public License as published
   by the Free Software Foundation; either version 2.1 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful, but
   WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
   or FITNESS FOR A PARTICULAR PURPOSE.
   See the GNU Lesser General Public License for more details.

   You should have received a copy of the GNU Lesser General Public License
   along with this library; if not, write to the
   Free Software Foundation, Inc.,
   51 Franklin Street, Fifth Floor Boston, MA  02110-1301 USA
*/

using System;
using System.Collections.Generic;
using System.Text;

namespace org.traceabilitycenter.RetroToolkit.Data
{
    public interface IDocumentTermCollection : IList<IDocumentTerm>
    {
        /// <summary>
        /// Searches the collection for an ITerm with the same term text as the supplied ITerm
        /// </summary>
        /// <param name="term"></param>
        /// <returns></returns>
        IDocumentTerm FindByTerm(ITerm term);

        /// <summary>
        /// Searches the collection for an ITerm with term text matching the specified text
        /// </summary>
        /// <param name="termText"></param>
        /// <returns></returns>
        IDocumentTerm FindByTerm(String termText);

        /// <summary>
        /// Searches the collection for an ITerm with the specified ID
        /// </summary>
        /// <param name="id"></param>
        /// <returns></returns>
        IDocumentTerm FindByID(int id);

        /// <summary>
        /// Sorts the collection in alphabetical order by term text
        /// </summary>
        void SortByVocabulary();

        /// <summary>
        /// Removes the specified ITerm from the collection.
        /// Returns true if the term was found and removed, false otherwise.
        /// </summary>
        /// <param name="term"></param>
        /// <returns></returns>
        bool RemoveTerm(ITerm term);
    }
}
